.flex.flex-col.items-center.justify-center.px-6.py-2.mx-auto.max-w-2xl
  %h1.text-4xl.mt-5.text-green URL Shortener
  %p.my-2.text-light-blue Every developer should write a URL Shortener, and here's mine:
.flex.flex-col.items-center.justify-center.px-6.py-4.mx-auto.lg:py-0{data: {behavior: :react, component: "react/urls/URLShortener", props: {url_redirect_path:, urls_path: }.to_json}}
.flex.flex-col.items-center.justify-center.px-6.py-8.mx-auto.max-w-2xl
  %p.my-2.text-light-blue What does stand out my shortener from the others? Lets see.
  %ul.text-dark-green.list-disc
    %li.list-none.bg-sharp It Uses MD5 hash of the original URL for a short link.
    %li.list-none.bg-sharp It Starts with the first five symbols of the hash.
    %li.list-none.bg-sharp If that's taken, it keeps adding more symbols until it finds a unique one.
    %li.list-none.bg-sharp="This all happens when you save a URL to the database, due to the #{link_to('trigger', 'https://github.com/Gavrilajava/portfolio/blob/url-shortener/db/triggers/add_unique_short_to_urls_on_insert.sql', class: 'text-light-blue')}."
    %li.list-none.bg-sharp If the URL's already there, no new record - just updates the timestamp.
    %li.list-none.bg-sharp It's simple, efficient, and scales well.
    %li.list-none.bg-sharp Frontend is written on Typescripted React

